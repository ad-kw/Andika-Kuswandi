@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* Light iOS 26 Liquid Glass Theme */
    --background: 0 0% 100%;
    --foreground: 220 14% 15%;

    --card: 0 0% 100% / 0.85;
    --card-foreground: 220 14% 15%;

    --popover: 0 0% 100% / 0.95;
    --popover-foreground: 220 14% 15%;

    --primary: 184 85% 55%;
    --primary-foreground: 0 0% 100%;

    --secondary: 220 15% 95%;
    --secondary-foreground: 220 14% 25%;

    --muted: 220 15% 96%;
    --muted-foreground: 220 12% 45%;

    --accent: 184 60% 85%;
    --accent-foreground: 220 14% 25%;

    --destructive: 0 84% 60%;
    --destructive-foreground: 0 0% 100%;

    --border: 220 15% 90%;
    --input: 0 0% 100% / 0.7;
    --ring: 184 85% 55%;

    --radius: 1.25rem;

    /* iOS 26 Liquid Glass Colors */
    --glass-white: 0 0% 100%;
    --glass-surface: 0 0% 100% / 0.85;
    --glass-surface-light: 0 0% 100% / 0.6;
    --glass-border: 0 0% 100% / 0.3;
    --glass-shadow: 220 15% 85%;
    
    /* Cyan Accents */
    --brand-cyan: 184 85% 55%;
    --brand-cyan-light: 184 60% 75%;
    --brand-cyan-subtle: 184 40% 90%;
    --brand-cyan-glow: 184 85% 65%;
    
    /* Liquid Glass Gradients */
    --gradient-glass: linear-gradient(135deg, hsl(var(--glass-white) / 0.9), hsl(var(--glass-white) / 0.6));
    --gradient-cyan: linear-gradient(135deg, hsl(var(--brand-cyan)), hsl(var(--brand-cyan-light)));
    --gradient-glow: radial-gradient(ellipse at center, hsl(var(--brand-cyan) / 0.15), transparent 70%);
    --gradient-mesh: radial-gradient(circle at 20% 80%, hsl(var(--brand-cyan-subtle) / 0.3) 0%, transparent 50%),
                     radial-gradient(circle at 80% 20%, hsl(var(--brand-cyan) / 0.2) 0%, transparent 50%),
                     radial-gradient(circle at 40% 40%, hsl(var(--brand-cyan-light) / 0.25) 0%, transparent 50%);
    
    /* Liquid Glass Shadows */
    --shadow-glass: 0 8px 32px hsl(var(--glass-shadow) / 0.12);
    --shadow-glass-strong: 0 16px 64px hsl(var(--glass-shadow) / 0.18);
    --shadow-cyan: 0 4px 20px hsl(var(--brand-cyan) / 0.15);
    --shadow-cyan-glow: 0 0 40px hsl(var(--brand-cyan) / 0.25);
    
    /* Glass Blur Effects */
    --blur-glass: blur(20px);
    --blur-subtle: blur(10px);
    
    /* Smooth Transitions */
    --transition-glass: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    --transition-smooth: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);

    --sidebar-background: 0 0% 98%;

    --sidebar-foreground: 240 5.3% 26.1%;

    --sidebar-primary: 240 5.9% 10%;

    --sidebar-primary-foreground: 0 0% 98%;

    --sidebar-accent: 240 4.8% 95.9%;

    --sidebar-accent-foreground: 240 5.9% 10%;

    --sidebar-border: 220 13% 91%;

    --sidebar-ring: 217.2 91.2% 59.8%;
  }

  /* Dark theme is our default - no separate dark class needed */
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
    font-feature-settings: "rlig" 1, "calt" 1;
    background: linear-gradient(135deg, 
      hsl(0 0% 100%) 0%, 
      hsl(220 15% 98%) 50%, 
      hsl(184 25% 96%) 100%);
    background-attachment: fixed;
    backdrop-filter: var(--blur-subtle);
  }

  /* Liquid Glass Utility Classes */
  .glass {
    background: hsl(var(--glass-surface));
    backdrop-filter: var(--blur-glass);
    border: 1px solid hsl(var(--glass-border));
    box-shadow: var(--shadow-glass);
  }

  .glass-strong {
    background: hsl(var(--glass-white) / 0.95);
    backdrop-filter: var(--blur-glass);
    border: 1px solid hsl(var(--glass-border));
    box-shadow: var(--shadow-glass-strong);
  }

  .glass-subtle {
    background: hsl(var(--glass-surface-light));
    backdrop-filter: var(--blur-subtle);
    border: 1px solid hsl(var(--glass-border));
    box-shadow: var(--shadow-glass);
  }

  .gradient-text {
    background: var(--gradient-cyan);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .glow-border {
    box-shadow: 0 0 0 1px hsl(var(--brand-cyan) / 0.2), var(--shadow-cyan-glow);
  }

  .mesh-bg {
    background: var(--gradient-mesh);
  }

  .animate-float {
    animation: float 6s ease-in-out infinite;
  }

  .animate-pulse-glow {
    animation: pulse-glow 3s ease-in-out infinite;
  }

  @keyframes float {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-10px); }
  }

  @keyframes pulse-glow {
    0%, 100% { box-shadow: var(--shadow-cyan); }
    50% { box-shadow: var(--shadow-cyan-glow); }
  }

  @keyframes glass-shimmer {
    0%, 100% { 
      background-position: -200% 0;
      opacity: 0;
    }
    50% { 
      background-position: 200% 0;
      opacity: 1;
    }
  }

  .animate-shimmer {
    background: linear-gradient(90deg, transparent, hsl(var(--brand-cyan) / 0.1), transparent);
    background-size: 200% 100%;
    animation: glass-shimmer 3s ease-in-out infinite;
  }

  /* PhotoCard Styles */
  .photocard-container {
    perspective: 1000px;
    transform-style: preserve-3d;
  }

  .photocard {
    position: relative;
    width: 100%;
    height: 100%;
    transform-style: preserve-3d;
    transition: transform 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    cursor: pointer;
    user-select: none;
  }

  .photocard.flipped {
    transform: rotateY(180deg);
  }

  .photocard.dragging {
    transform: scale(0.98);
    transition: transform 0.2s ease;
  }

  .photocard-front,
  .photocard-back {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    overflow: hidden;
  }

  .photocard-front {
    border-radius: 70% 30% 30% 70% / 60% 40% 60% 40%;
    animation: liquid-morph 8s ease-in-out infinite;
  }

  .photocard-back {
    transform: rotateY(180deg);
    background: hsl(var(--glass-surface));
    backdrop-filter: var(--blur-glass);
    border: 1px solid hsl(var(--glass-border));
    box-shadow: var(--shadow-glass);
    border-radius: 40% 60% 60% 40% / 70% 30% 70% 30%;
    animation: liquid-morph-reverse 8s ease-in-out infinite;
  }

  .photocard:hover {
    transform: translateY(-5px) scale(1.02);
  }

  .photocard.flipped:hover {
    transform: translateY(-5px) scale(1.02) rotateY(180deg);
  }

  .photocard:active {
    transform: scale(0.95);
  }

  @keyframes liquid-morph {
    0%, 100% {
      border-radius: 70% 30% 30% 70% / 60% 40% 60% 40%;
    }
    25% {
      border-radius: 30% 70% 70% 30% / 40% 60% 40% 60%;
    }
    50% {
      border-radius: 50% 50% 80% 20% / 90% 10% 90% 10%;
    }
    75% {
      border-radius: 80% 20% 50% 50% / 10% 90% 10% 90%;
    }
  }

  @keyframes liquid-morph-reverse {
    0%, 100% {
      border-radius: 40% 60% 60% 40% / 70% 30% 70% 30%;
    }
    25% {
      border-radius: 60% 40% 40% 60% / 30% 70% 30% 70%;
    }
    50% {
      border-radius: 20% 80% 50% 50% / 10% 90% 10% 90%;
    }
    75% {
      border-radius: 50% 50% 20% 80% / 90% 10% 90% 10%;
    }
  }
}
